##spring.application.name=spring-security-clients
#
##server:
##  port:8080
##spring:
##  datasource:
##    url:jdbc:mysql://localhost:3306/userRegistration
##    username:root
##    password:root
##    driver-class-name:com.mysql.jdbc.Driver
##  jpa:
##    show-sql: true
##    hibernate:
##      ddl-auto: update
#
#spring.jpa.hibernate.ddl-auto=update
#  #spring.datasource.url=jdbc:mysql://localhost:3306/sunTravel
##spring.datasource.url=jdbc:mysql://localhost:3306/userRegistrationNew
#spring.datasource.url=jdbc:mysql://localhost:3306/userRegistration
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql:true
#spring.jpa.hibernate.ddl.auto=update
#
#
#spring.security.oauth2.client.registration.api-client-oidc.provider=spring
#spring.security.oauth2.client.registration.api-client-oidc.client-id=api-client
#spring.security.oauth2.client.registration.api-client-oidc.client-secret=secret
#spring.security.oauth2.client.registration.api-client-oidc.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.api-client-oidc.redirect-uri="http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
#spring.security.oauth2.client.registration.api-client-oidc.scope=openid
#spring.security.oauth2.client.registration.api-client-oidc.client-name=api-client-oidc
#spring.security.oauth2.client.registration.api-client-authorization-code.provider=spring
#spring.security.oauth2.client.registration.api-client-authorization-code.client-id=api-client
#spring.security.oauth2.client.registration.api-client-authorization-code.client-secret=secret
#spring.security.oauth2.client.registration.api-client-authorization-code.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.api-client-authorization-code.redirect-uri="http://127.0.0.1:8080/authorized"
#spring.security.oauth2.client.registration.api-client-authorization-code.scope=api.read
#spring.security.oauth2.client.registration.api-client-authorization-code.client-name=api-client-authorization-code
#spring.security.oauth2.client.provider.spring.issue-uri=http://auth-server:9000
#

server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/userRegistration
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          api-client-oidc:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: api-client-oidc
          api-client-authorization-code:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/authorized"
            scope: api.read
            client-name: api-client-authorization-code
        provider:
          spring:
            issuer-uri: http://auth-server:9000
